/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ventanasproyecto;

import LogicaNegocio.ClienteBL;
import clases.Departamento;
import clases.Distrito;
import clases.Provincia;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import static ventanasproyecto.ventanaManTrab.tabla;

/**
 *
 * @author Andres
 */
public class ventanaMantCli extends javax.swing.JFrame {

    /**
     * Creates new form ventanaMantCli
     */
    private ClienteBL LogicaNegocio;
    public ventanaMantCli() throws ClassNotFoundException, SQLException {
        initComponents();
        this.setLocationRelativeTo(null);
        this.setTitle("Ventana Mantener Clientes");
        LogicaNegocio = new ClienteBL();
        llenarComboBoxDep();
        tabla.getColumnModel().getColumn(0).setPreferredWidth(30);
        tabla.getColumnModel().getColumn(6).setPreferredWidth(200);
        TapPat.setVisible(false);
        TapMat.setVisible(false);
        apPat.setVisible(false);
        apMat.setVisible(false);
        dir.setVisible(false);
        email.setVisible(false);
        tlf.setVisible(false);
        dirtxt.setVisible(false);
        emailtxt.setVisible(false);
        tlftxt.setVisible(false);
        namae.setVisible(false);
        namaetxt.setVisible(false);
        tipoDoc.setVisible(false);
        numDoc.setVisible(false);
        TnumDoc.setVisible(false);
        TtipoDoc.setVisible(false);
        departamento.setVisible(false);
        provincia.setVisible(false);
        distrito.setVisible(false);
        Tdepartamento.setVisible(false);
        Tprovincia.setVisible(false);
        Tdistrito.setVisible(false);
        registrar.setEnabled(false);
        modificar.setEnabled(false);
        eliminar.setEnabled(false);
    }
    int idU;
    ventanaAdmin anterior;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField2 = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        dirtxt = new javax.swing.JLabel();
        emailtxt = new javax.swing.JLabel();
        tlftxt = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        dir = new javax.swing.JTextField();
        email = new javax.swing.JTextField();
        tlf = new javax.swing.JTextField();
        TapPat = new javax.swing.JLabel();
        TapMat = new javax.swing.JLabel();
        apPat = new javax.swing.JTextField();
        apMat = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabla = new javax.swing.JTable();
        namaetxt = new javax.swing.JLabel();
        namae = new javax.swing.JTextField();
        registrar = new javax.swing.JButton();
        modificar = new javax.swing.JButton();
        eliminar = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        tipoCli = new javax.swing.JComboBox<>();
        TnumDoc = new javax.swing.JLabel();
        numDoc = new javax.swing.JTextField();
        TtipoDoc = new javax.swing.JLabel();
        tipoDoc = new javax.swing.JComboBox<>();
        Tdepartamento = new javax.swing.JLabel();
        Tprovincia = new javax.swing.JLabel();
        Tdistrito = new javax.swing.JLabel();
        departamento = new javax.swing.JComboBox<>();
        provincia = new javax.swing.JComboBox<>();
        distrito = new javax.swing.JComboBox<>();

        jTextField2.setText("jTextField2");

        jLabel8.setText("jLabel8");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(750, 620));
        setPreferredSize(new java.awt.Dimension(750, 620));
        setResizable(false);
        getContentPane().setLayout(null);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("Mantener Clientes");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(9, 13, 165, 22);

        dirtxt.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        dirtxt.setText("Direccion:");
        getContentPane().add(dirtxt);
        dirtxt.setBounds(380, 213, 64, 16);

        emailtxt.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        emailtxt.setText("Correo:");
        getContentPane().add(emailtxt);
        emailtxt.setBounds(380, 93, 49, 16);

        tlftxt.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        tlftxt.setText("Telefono:");
        getContentPane().add(tlftxt);
        tlftxt.setBounds(380, 63, 60, 16);

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel5.setText("Tipo Cliente:");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(10, 63, 79, 16);
        getContentPane().add(dir);
        dir.setBounds(490, 210, 200, 22);
        getContentPane().add(email);
        email.setBounds(490, 90, 200, 22);
        getContentPane().add(tlf);
        tlf.setBounds(490, 60, 200, 22);

        TapPat.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        TapPat.setText("Apellido Paterno:");
        getContentPane().add(TapPat);
        TapPat.setBounds(10, 183, 112, 16);

        TapMat.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        TapMat.setText("Apellido Materno:");
        getContentPane().add(TapMat);
        TapMat.setBounds(10, 213, 115, 16);
        getContentPane().add(apPat);
        apPat.setBounds(140, 180, 200, 22);
        getContentPane().add(apMat);
        apMat.setBounds(140, 210, 200, 22);

        tabla.setBackground(new java.awt.Color(255, 255, 204));
        tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Tipo Cliente", "DNI/RUC", "Nombre", "Telefono", "Correo", "Direccion"
            }
        ));
        tabla.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabla);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(10, 290, 700, 230);

        namaetxt.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        namaetxt.setText("Nombre:");
        getContentPane().add(namaetxt);
        namaetxt.setBounds(10, 123, 120, 20);

        namae.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                namaeActionPerformed(evt);
            }
        });
        getContentPane().add(namae);
        namae.setBounds(140, 120, 200, 22);

        registrar.setBackground(new java.awt.Color(255, 255, 204));
        registrar.setText("Registrar");
        registrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registrarActionPerformed(evt);
            }
        });
        getContentPane().add(registrar);
        registrar.setBounds(12, 250, 90, 25);

        modificar.setBackground(new java.awt.Color(255, 255, 204));
        modificar.setText("Modificar");
        modificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modificarActionPerformed(evt);
            }
        });
        getContentPane().add(modificar);
        modificar.setBounds(132, 250, 90, 25);

        eliminar.setBackground(new java.awt.Color(255, 255, 204));
        eliminar.setText("Eliminar");
        eliminar.setMaximumSize(new java.awt.Dimension(95, 25));
        eliminar.setMinimumSize(new java.awt.Dimension(95, 25));
        eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminarActionPerformed(evt);
            }
        });
        getContentPane().add(eliminar);
        eliminar.setBounds(252, 250, 90, 25);

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/volver.png"))); // NOI18N
        jButton4.setText("Volver");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton4);
        jButton4.setBounds(440, 540, 120, 29);

        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/logout.png"))); // NOI18N
        jButton5.setText("Cerrar Sesi√≥n");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton5);
        jButton5.setBounds(570, 540, 140, 29);

        tipoCli.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Escoja...", "Persona", "Empresa" }));
        tipoCli.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tipoCliActionPerformed(evt);
            }
        });
        getContentPane().add(tipoCli);
        tipoCli.setBounds(140, 60, 200, 22);

        TnumDoc.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        TnumDoc.setText("Num Documento:");
        getContentPane().add(TnumDoc);
        TnumDoc.setBounds(10, 93, 120, 16);
        getContentPane().add(numDoc);
        numDoc.setBounds(140, 90, 200, 22);

        TtipoDoc.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        TtipoDoc.setText("Tipo Documento:");
        getContentPane().add(TtipoDoc);
        TtipoDoc.setBounds(10, 153, 120, 16);

        getContentPane().add(tipoDoc);
        tipoDoc.setBounds(140, 150, 200, 22);

        Tdepartamento.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        Tdepartamento.setText("Departamento:");
        getContentPane().add(Tdepartamento);
        Tdepartamento.setBounds(380, 123, 100, 16);

        Tprovincia.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        Tprovincia.setText("Provincia:");
        getContentPane().add(Tprovincia);
        Tprovincia.setBounds(380, 153, 90, 16);

        Tdistrito.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        Tdistrito.setText("Distrito:");
        getContentPane().add(Tdistrito);
        Tdistrito.setBounds(380, 183, 80, 16);

        departamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                departamentoActionPerformed(evt);
            }
        });
        getContentPane().add(departamento);
        departamento.setBounds(490, 120, 200, 22);

        provincia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                provinciaActionPerformed(evt);
            }
        });
        getContentPane().add(provincia);
        provincia.setBounds(490, 150, 200, 22);

        distrito.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                distritoActionPerformed(evt);
            }
        });
        getContentPane().add(distrito);
        distrito.setBounds(490, 180, 200, 22);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    javax.swing.table.DefaultTableModel model;
    
    private void llenarComboBoxDep() throws ClassNotFoundException, SQLException{
        ArrayList<Departamento> dep = LogicaNegocio.listarDepartamentos();
        DefaultComboBoxModel modelo = new DefaultComboBoxModel();
        int n = dep.size();
        for(int i=0; i<n; i++){
            modelo.addElement(dep.get(i));
        }
        departamento.setModel(modelo);
    }
    
    private void registrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registrarActionPerformed
        // TODO add your handling code here:
        boolean a = validarInput();
        if (!a) return;
        model = (javax.swing.table.DefaultTableModel)tabla.getModel();
        idU++;
        String num = Integer.toString(idU);
        Object s[] ={idU, tipoCli.getSelectedItem().toString(), namae.getText(), numDoc.getText(), apPat.getText(), apMat.getText(), dir.getText(), tlf.getText(), email.getText()};
        
        model.addRow(s);
        dir.setText("");
        email.setText("");
        tlf.setText("");
        namae.setText("");
        numDoc.setText("");
        apPat.setText("");
        tipoCli.setSelectedItem(tipoCli.getItemAt(0));
        apMat.setText("");
        
    }//GEN-LAST:event_registrarActionPerformed

    private boolean validarInput(){
        String s = this.dir.getText();
        if((s).equals("")){
            JOptionPane.showMessageDialog(null, "No puede dejar campos activos vacios", "Error Null", JOptionPane.PLAIN_MESSAGE);
            return false;
        }
        for (int i=0; i<s.length(); i++){
            if(!((s.charAt(i)>='a' && s.charAt(i)<='z')||(s.charAt(i)>='A' && s.charAt(i)<='Z') || s.charAt(i) == '√±' || s.charAt(i) == '√ë' || s.charAt(i)== ' ' || (s.charAt(i)>='0' && s.charAt(i)<='9'))){
                JOptionPane.showMessageDialog(null, "campo direccion solo puede contener alfanumericos", "Error Direccion", JOptionPane.PLAIN_MESSAGE);
                return false;
            }
        }
        s = this.email.getText();
        if((s).equals("")){
            JOptionPane.showMessageDialog(null, "No puede dejar campos activos vacios", "Error Null", JOptionPane.PLAIN_MESSAGE);
            return false;
        }
        
        s = this.tlf.getText();
        if((s).equals("")){
            JOptionPane.showMessageDialog(null, "No puede dejar campos activos vacios", "Error Null", JOptionPane.PLAIN_MESSAGE);
            return false;
        }
        for (int i=0; i<s.length(); i++){
            if(!(s.charAt(i)>='0' && s.charAt(i)<='9')){
                JOptionPane.showMessageDialog(null, "campo telefono solo puede contener numeros", "Error Telefono", JOptionPane.PLAIN_MESSAGE);
                return false;
            }
        }
        s = this.tipoCli.getSelectedItem().toString();
        if((s).equals("")){
            JOptionPane.showMessageDialog(null, "No puede dejar campos activos vacios", "Error Null", JOptionPane.PLAIN_MESSAGE);
            return false;
        }
        s = this.namae.getText();
        if((s).equals("")){
            JOptionPane.showMessageDialog(null, "No puede dejar campos activos vacios", "Error Null", JOptionPane.PLAIN_MESSAGE);
            return false;
        }
        for (int i=0; i<s.length(); i++){
            if(!((s.charAt(i)>='a' && s.charAt(i)<='z')||(s.charAt(i)>='A' && s.charAt(i)<='Z') || s.charAt(i) == '√±' || s.charAt(i) == '√ë' || s.charAt(i)== ' ')){
                JOptionPane.showMessageDialog(null, "campo nombre solo puede contener letras", "Error Nombre", JOptionPane.PLAIN_MESSAGE);
                return false;
            }
        }
        if(this.tipoCli.getSelectedItem().toString() == "Persona"){
            s = this.numDoc.getText();
            if((s).equals("")){
                JOptionPane.showMessageDialog(null, "No puede dejar campos activos vacios", "Error Null", JOptionPane.PLAIN_MESSAGE);
                return false;
            }
            for (int i=0; i<s.length(); i++){
                if(!(s.charAt(i)>='0' && s.charAt(i)<='9')){
                    JOptionPane.showMessageDialog(null, "campo dni solo puede contener numeros", "Error dni", JOptionPane.PLAIN_MESSAGE);
                    return false;
                }
            }
            s = this.apPat.getText();
            if((s).equals("")){
                JOptionPane.showMessageDialog(null, "No puede dejar campos activos vacios", "Error Null", JOptionPane.PLAIN_MESSAGE);
                return false;
            }
            for (int i=0; i<s.length(); i++){
                if(!((s.charAt(i)>='a' && s.charAt(i)<='z')||(s.charAt(i)>='A' && s.charAt(i)<='Z') || s.charAt(i) == '√±' || s.charAt(i) == '√ë' || s.charAt(i)== ' ')){
                    JOptionPane.showMessageDialog(null, "campo apellido paterno solo puede contener letras", "Error Apellido Paterno", JOptionPane.PLAIN_MESSAGE);
                    return false;
                }
            }
            s = this.apMat.getText();
            if((s).equals("")){
                JOptionPane.showMessageDialog(null, "No puede dejar campos activos vacios", "Error Null", JOptionPane.PLAIN_MESSAGE);
                return false;
            }
            for (int i=0; i<s.length(); i++){
                if(!((s.charAt(i)>='a' && s.charAt(i)<='z')||(s.charAt(i)>='A' && s.charAt(i)<='Z') || s.charAt(i) == '√±' || s.charAt(i) == '√ë' || s.charAt(i)== ' ')){
                    JOptionPane.showMessageDialog(null, "campo apellido materno solo puede contener letras", "Error Apellido Materno", JOptionPane.PLAIN_MESSAGE);
                    return false;
                }
            }  
        }else if(this.tipoCli.getSelectedItem().toString() == "Empresa"){
            s = this.numDoc.getText();
            if((s).equals("")){
                JOptionPane.showMessageDialog(null, "No puede dejar campos activos vacios", "Error Null", JOptionPane.PLAIN_MESSAGE);
                return false;
            }
            for (int i=0; i<s.length(); i++){
                if(!(s.charAt(i)>='0' && s.charAt(i)<='9')){
                    JOptionPane.showMessageDialog(null, "campo ruc solo puede contener numeros", "Error RUC", JOptionPane.PLAIN_MESSAGE);
                    return false;
                }
            }
            s = this.namae.getText();
            if((s).equals("")){
                JOptionPane.showMessageDialog(null, "No puede dejar campos activos vacios", "Error Null", JOptionPane.PLAIN_MESSAGE);
                return false;
            }
            for (int i=0; i<s.length(); i++){
                if(!((s.charAt(i)>='a' && s.charAt(i)<='z')||(s.charAt(i)>='A' && s.charAt(i)<='Z') || s.charAt(i) == '√±' || s.charAt(i) == '√ë' || s.charAt(i)== ' ' || (s.charAt(i)>='0' && s.charAt(i)<='9'))){
                    JOptionPane.showMessageDialog(null, "campo razon social materno solo puede contener alfanumericos", "Error Razon Social", JOptionPane.PLAIN_MESSAGE);
                    return false;
                }
            }
        }
        
        return true;
    }
    
    private void tipoCliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tipoCliActionPerformed
        // TODO add your handling code here:
        String s = this.tipoCli.getSelectedItem().toString();
        if(s == "Escoja..."){
            TapPat.setVisible(false);
            TapMat.setVisible(false);
            apPat.setVisible(false);
            apMat.setVisible(false);
            dir.setVisible(false);
            email.setVisible(false);
            tlf.setVisible(false);
            dirtxt.setVisible(false);
            emailtxt.setVisible(false);
            tlftxt.setVisible(false);
            namae.setVisible(false);
            namaetxt.setVisible(false);
            tipoDoc.setVisible(false);
            numDoc.setVisible(false);
            TnumDoc.setVisible(false);
            TtipoDoc.setVisible(false);
            departamento.setVisible(false);
            provincia.setVisible(false);
            distrito.setVisible(false);
            Tdepartamento.setVisible(false);
            Tprovincia.setVisible(false);
            Tdistrito.setVisible(false);
            registrar.setEnabled(false);
            modificar.setEnabled(false);
            eliminar.setEnabled(false);
            
        }else if (s == "Persona"){
            TapPat.setVisible(true);
            TapMat.setVisible(true);
            apPat.setVisible(true);
            apMat.setVisible(true);
            email.setVisible(true);
            tlf.setVisible(true);
            emailtxt.setVisible(true);
            tlftxt.setVisible(true);
            namae.setVisible(true);
            namaetxt.setVisible(true);
            namaetxt.setText("Nombre:");
            tipoDoc.setVisible(true);
            numDoc.setVisible(true);
            TnumDoc.setVisible(true);
            TnumDoc.setText("Num Documento:");
            TtipoDoc.setVisible(true);
            departamento.setVisible(true);
            Tdepartamento.setVisible(true);
            registrar.setEnabled(true);
        }else if (s == "Empresa"){
            TapPat.setVisible(false);
            TapMat.setVisible(false);
            apPat.setVisible(false);
            apMat.setVisible(false);
            email.setVisible(true);
            tlf.setVisible(true);
            emailtxt.setVisible(true);
            tlftxt.setVisible(true);
            namae.setVisible(true);
            namaetxt.setVisible(true);
            namaetxt.setText("Razon Social:");
            tipoDoc.setVisible(false);
            numDoc.setVisible(true);
            TnumDoc.setVisible(true);
            TnumDoc.setText("RUC:");
            TtipoDoc.setVisible(false);
            departamento.setVisible(true);
            Tdepartamento.setVisible(true);
            registrar.setEnabled(true);
        }
    }//GEN-LAST:event_tipoCliActionPerformed

    private void tablaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaMouseClicked
        // TODO add your handling code here:
        model = (javax.swing.table.DefaultTableModel)tabla.getModel();
        dir.setText(String.valueOf(model.getValueAt(tabla.getSelectedRow(), 8)));
        email.setText(String.valueOf(model.getValueAt(tabla.getSelectedRow(), 10)));
        tlf.setText(String.valueOf(model.getValueAt(tabla.getSelectedRow(), 9)));
        tipoCli.setSelectedItem(model.getValueAt(tabla.getSelectedRow(), 1));
        
        modificar.setEnabled(true);
        eliminar.setEnabled(true);
        //dni.setText(String.valueOf(model.getValueAt(tabla.getSelectedRow(), 6)));
        
        //tipoUser.setSelectedItem(model.getValueAt(tabla.getSelectedRow(), 7));
        if(tipoCli.getSelectedItem().toString() == "Persona"){
            namae.setEnabled(true);
            TapPat.setEnabled(true);
            TapMat.setEnabled(true);
            namae.setText(String.valueOf(model.getValueAt(tabla.getSelectedRow(), 2)));
            apPat.setText(String.valueOf(model.getValueAt(tabla.getSelectedRow(), 4)));
            apMat.setText(String.valueOf(model.getValueAt(tabla.getSelectedRow(), 5)));
        }else if(tipoCli.getSelectedItem().toString() == "Empresa"){

            TapPat.setEnabled(false);
            TapMat.setEnabled(false);
            namaetxt.setEnabled(true);
            namae.setEnabled(false);
            apPat.setEnabled(false);
            apMat.setEnabled(false);
        }
    }//GEN-LAST:event_tablaMouseClicked

    private void modificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modificarActionPerformed
        // TODO add your handling code here:
        
        int YesOrNo = JOptionPane.showConfirmDialog(null, "¬øDesea modificar la linea seleccionada?","Modificar Linea", JOptionPane.YES_NO_OPTION);
        if(YesOrNo == 0){
            boolean a = validarInput();
            if(!a) return;
            model.setValueAt(dir.getText(), tabla.getSelectedRow(), 8);
            model.setValueAt(email.getText(), tabla.getSelectedRow(), 10);
            model.setValueAt(tlf.getText(), tabla.getSelectedRow(), 9);
            model.setValueAt(tipoCli.getSelectedItem().toString(), tabla.getSelectedRow(), 1);

            if(tipoCli.getSelectedItem().toString() == "Persona"){

            }else if(tipoCli.getSelectedItem().toString() == "Empresa"){
                apPat.setText("");
                apMat.setText("");
            }
            model.setValueAt(namae.getText(), tabla.getSelectedRow(), 2);
            model.setValueAt(apPat.getText(), tabla.getSelectedRow(), 4);
            model.setValueAt(apMat.getText(), tabla.getSelectedRow(), 5);
            model.setValueAt(namae.getText(), tabla.getSelectedRow(), 7);
            dir.setText("");
            email.setText("");
            tlf.setText("");
            namae.setText("");
            apPat.setText("");
            tipoCli.setSelectedItem(tipoCli.getItemAt(0));
            apMat.setText("");
        }
        
       
    }//GEN-LAST:event_modificarActionPerformed

    private void eliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminarActionPerformed
        // TODO add your handling code here:
        
        int YesOrNo = JOptionPane.showConfirmDialog(null, "¬øDesea eliminar la linea seleccionada?","Eliminar Linea", JOptionPane.YES_NO_OPTION);
        if(YesOrNo == 0){
            model.removeRow(tabla.getSelectedRow());
            eliminar.setEnabled(false);
            modificar.setEnabled(false);
            dir.setText("");
            email.setText("");
            tlf.setText("");
            namae.setText("");
            apPat.setText("");
            tipoCli.setSelectedItem(tipoCli.getItemAt(0));
            apMat.setText("");
        }
        
    }//GEN-LAST:event_eliminarActionPerformed
    ventanaLogin ventanaHome;
    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        int YesOrNo = JOptionPane.showConfirmDialog(null, "¬øDesea cerrar sesi√≥n?","Cerrar Sesi√≥n", JOptionPane.YES_NO_OPTION);
        if(YesOrNo == 0){
            ventanaHome.regresar();
            this.dispose();
        }
        
    }//GEN-LAST:event_jButton5ActionPerformed

    private void namaeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_namaeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_namaeActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        int YesOrNo = JOptionPane.showConfirmDialog(null, "¬øDesea volver a la ventana anterior?","Volver", JOptionPane.YES_NO_OPTION);
        if(YesOrNo == 0){
            anterior.setVisible(true);
            this.dispose();
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void departamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_departamentoActionPerformed
        try {
            // TODO add your handling code here:
            Departamento d = (Departamento) departamento.getSelectedItem();
            ArrayList<Provincia> prov = LogicaNegocio.listarProvincias(d.getIdDep());
            DefaultComboBoxModel modelo = new DefaultComboBoxModel();
            int n = prov.size();
            for(int i=0; i<n; i++){
                modelo.addElement(prov.get(i));
            }
            provincia.setModel(modelo);
            provincia.setVisible(true);
            Tprovincia.setVisible(true);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(ventanaMantCli.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(ventanaMantCli.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_departamentoActionPerformed

    private void provinciaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_provinciaActionPerformed
        try {
            // TODO add your handling code here:
            Provincia p = (Provincia) provincia.getSelectedItem();
            ArrayList<Distrito> dist = LogicaNegocio.listarDistritos(p.getIdProv());
            DefaultComboBoxModel modelo = new DefaultComboBoxModel();
            int n = dist.size();
            for(int i=0; i<n; i++){
                modelo.addElement(dist.get(i));
            }
            distrito.setModel(modelo);
            distrito.setVisible(true);
            Tdistrito.setVisible(true);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(ventanaMantCli.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(ventanaMantCli.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_provinciaActionPerformed

    private void distritoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_distritoActionPerformed
        // TODO add your handling code here:
        dir.setVisible(true);
        dirtxt.setVisible(true);
    }//GEN-LAST:event_distritoActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel TapMat;
    private javax.swing.JLabel TapPat;
    private javax.swing.JLabel Tdepartamento;
    private javax.swing.JLabel Tdistrito;
    private javax.swing.JLabel TnumDoc;
    private javax.swing.JLabel Tprovincia;
    private javax.swing.JLabel TtipoDoc;
    private javax.swing.JTextField apMat;
    private javax.swing.JTextField apPat;
    private javax.swing.JComboBox<String> departamento;
    private javax.swing.JTextField dir;
    private javax.swing.JLabel dirtxt;
    private javax.swing.JComboBox<String> distrito;
    private javax.swing.JButton eliminar;
    private javax.swing.JTextField email;
    private javax.swing.JLabel emailtxt;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JButton modificar;
    private javax.swing.JTextField namae;
    private javax.swing.JLabel namaetxt;
    private javax.swing.JTextField numDoc;
    private javax.swing.JComboBox<String> provincia;
    private javax.swing.JButton registrar;
    private javax.swing.JTable tabla;
    private javax.swing.JComboBox<String> tipoCli;
    private javax.swing.JComboBox<String> tipoDoc;
    private javax.swing.JTextField tlf;
    private javax.swing.JLabel tlftxt;
    // End of variables declaration//GEN-END:variables
}
